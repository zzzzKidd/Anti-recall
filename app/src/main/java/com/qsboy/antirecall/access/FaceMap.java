/*
 * Copyright Â© 2016 - 2018 by GitHub.com/JasonQS
 * anti-recall.qsboy.com
 * All Rights Reserved
 */

package com.qsboy.antirecall.access;

import android.util.Log;

public class FaceMap {
    public static String TAG = "FaceMap";

    public static String prefix = "\u0014";
    public static String[] strings = {
            "/\u5472\u7259",
            "/\u8c03\u76ae",
            "/\u6d41\u6c57",
            "/\u5077\u7b11",
            "/\u518d\u89c1",
            "/\u6572\u6253",
            "/\u64e6\u6c57",
            "/\u732a\u5934",
            "/\u73ab\u7470",
            "/\u6d41\u6cea",
            "/\u5927\u54ed",
            "/\u5618...",
            "/\u9177",
            "/\u6293\u72c2",
            "/\u59d4\u5c48",
            "/\u4fbf\u4fbf",
            "/\u70b8\u5f39",
            "/\u83dc\u5200",
            "/\u53ef\u7231",
            "/\u8272",
            "/\u5bb3\u7f9e",
            "/\u5f97\u610f",
            "/\u5410",
            "/\u5fae\u7b11",
            "/\u53d1\u6012",
            "/\u5c34\u5c2c",
            "/\u60ca\u6050",
            "/\u51b7\u6c57",
            "/\u7231\u5fc3",
            "/\u793a\u7231",
            "/\u767d\u773c",
            "/\u50b2\u6162",
            "/\u96be\u8fc7",
            "/\u60ca\u8bb6",
            "/\u7591\u95ee",
            "/\u7761",
            "/\u4eb2\u4eb2",
            "/\u61a8\u7b11",
            "/\u7231\u60c5",
            "/\u8870",
            "/\u6487\u5634",
            "/\u9634\u9669",
            "/\u594b\u6597",
            "/\u53d1\u5446",
            "/\u53f3\u54fc\u54fc",
            "/\u62e5\u62b1",
            "/\u574f\u7b11",
            "/\u98de\u543b",
            "/\u9119\u89c6",
            "/\u6655",
            "/\u60a0\u95f2",
            "/\u53ef\u601c",
            "/\u8d5e",
            "/\u8e29",
            "/\u63e1\u624b",
            "/\u80dc\u5229",
            "/\u62b1\u62f3",
            "/\u51cb\u8c22",
            "/\u996d",
            "/\u86cb\u7cd5",
            "/\u897f\u74dc",
            "/\u5564\u9152",
            "/\u74e2\u866b",
            "/\u52fe\u5f15",
            "/OK",
            "/\u7231\u4f60",
            "/\u5496\u5561",
            "/\u94b1",
            "/\u6708\u4eae",
            "/\u7f8e\u5973",
            "/\u5200",
            "/\u53d1\u6296",
            "/\u5dee\u52b2",
            "/\u62f3\u5934",
            "/\u5fc3\u788e",
            "/\u592a\u9633",
            "/\u793c\u7269",
            "/\u8db3\u7403",
            "/\u9ab7\u9ac5",
            "/\u6325\u624b",
            "/\u95ea\u7535",
            "/\u9965\u997f",
            "/\u56f0",
            "/\u5492\u9a82",
            "/\u6298\u78e8",
            "/\u62a0\u9f3b",
            "/\u9f13\u638c",
            "/\u7cd7\u5927\u4e86",
            "/\u5de6\u54fc\u54fc",
            "/\u54c8\u6b20",
            "/\u5feb\u54ed\u4e86",
            "/\u5413",
            "/\u7bee\u7403",
            "/\u4e52\u4e53",
            "/NO",
            "/\u8df3\u8df3",
            "/\u6004\u706b",
            "/\u8f6c\u5708",
            "/\u78d5\u5934",
            "/\u56de\u5934",
            "/\u8df3\u7ef3",
            "/\u6fc0\u52a8",
            "/\u8857\u821e",
            "/\u732e\u543b",
            "/\u5de6\u592a\u6781",
            "/\u53f3\u592a\u6781",
            "/\u95ed\u5634",
            "/\u62db\u8d22\u8fdb\u5b9d",
            "/\u53cc\u559c",
            "/\u97ad\u70ae",
            "/\u706f\u7b3c",
            "/\u53d1\u8d22",
            "/K\u6b4c",
            "/\u8d2d\u7269",
            "/\u90ae\u4ef6",
            "/\u5e05",
            "/\u559d\u5f69",
            "/\u7948\u7977",
            "/\u7206\u7b4b",
            "/\u68d2\u68d2\u7cd6",
            "/\u559d\u5976",
            "/\u4e0b\u9762",
            "/\u9999\u8549",
            "/\u98de\u673a",
            "/\u5f00\u8f66",
            "/\u9ad8\u94c1\u5de6\u8f66\u5934",
            "/\u8f66\u53a2",
            "/\u9ad8\u94c1\u53f3\u8f66\u5934",
            "/\u591a\u4e91",
            "/\u4e0b\u96e8",
            "/\u949e\u7968",
            "/\u718a\u732b",
            "/\u706f\u6ce1",
            "/\u98ce\u8f66",
            "/\u95f9\u949f",
            "/\u6253\u4f1e",
            "/\u5f69\u7403",
            "/\u94bb\u6212",
            "/\u6c99\u53d1",
            "/\u7eb8\u5dfe",
            "/\u836f",
            "/\u624b\u67aa",
            "/\u9752\u86d9",
            "/\u4e0d\u5f00\u5fc3",
            "/\u554a",
            "/\u60f6\u6050",
            "/\u51b7\u6f20",
            "/\u5443",
            "/\u597d\u68d2",
            "/\u62dc\u6258",
            "/\u70b9\u8d5e",
            "/\u65e0\u804a",
            "/\u6258\u8138",
            "/\u5403",
            "/\u9001\u82b1",
            "/\u5bb3\u6015",
            "/\u82b1\u75f4",
            "/\u5c0f\u6837\u513f",
            "/\u8138\u7ea2",
            "/\u98d9\u6cea",
            "/\u6211\u4e0d\u770b",
            "/\u6258\u816e",
            "/\u54c7\u54e6",
            "/\u8336",
            "/\u7728\u773c\u775b",
            "/\u6cea\u5954",
            "/\u65e0\u5948",
            "/\u5356\u840c",
            "/\u5c0f\u7ea0\u7ed3",
            "/\u55b7\u8840",
            "/\u659c\u773c\u7b11",
            "/doge",
            "/\u60ca\u559c",
            "/\u9a9a\u6270",
            "/\u7b11\u54ed",
            "/\u6211\u6700\u7f8e",
            "/\u6cb3\u87f9",
            "/\u7f8a\u9a7c",
            "/\u6817\u5b50",
            "/\u5e7d\u7075",
            "/\u86cb",
            "/\u9a6c\u8d5b\u514b",
            "/\u83ca\u82b1",
            "/\u80a5\u7682",
            "/\u7ea2\u5305",
            "/\u5927\u7b11",
            "/\u5575\u5575",
            "/\u7cca\u8138",
            "/\u62cd\u5934",
            "/\u626f\u4e00\u626f",
            "/\u8214\u4e00\u8214",
            "/\u8e6d\u4e00\u8e6d",
            "/\u62fd\u70b8\u5929",
            "/\u9876\u5471\u5471"
    };

    public static String replaceFace(String s) {
        int indexOfPrefix = -1;
        StringBuilder sb = new StringBuilder(s);
        while ((indexOfPrefix = sb.indexOf(prefix, indexOfPrefix + 1)) > -1) {
            int index = sb.codePointAt(indexOfPrefix + 1);
            Log.e(TAG, "addMsg: s: " + s);
            Log.e(TAG, "addMsg: " + index);
            Log.e(TAG, "addMsg: indexOfPrefix: " + indexOfPrefix);
            Log.e(TAG, "addMsg: length: " + s.length());
            sb.replace(indexOfPrefix, indexOfPrefix + 2, strings[index]);
        }
        return sb.toString();
    }
}
